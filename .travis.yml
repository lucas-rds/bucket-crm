language: java
before_install:
- chmod +x gradlew
- if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf "$HOME/google-cloud-sdk"; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash > /dev/null; fi
# This line is critical. We setup the SDK to take precedence in our
# environment over the old SDK that is already on the machine.
- source $HOME/google-cloud-sdk/path.bash.inc
- gcloud components install app-engine-java
- gcloud version

before_cache:
- rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
  - "$HOME/.gradle/caches/"
  - "$HOME/.gradle/wrapper/"
  - "$HOME/google-cloud-sdk"

deploy:
  provider: script
  script: chmod +x gradlew && chmod +x ./deploy.sh && ./deploy.sh
  on:
    branch: master

# Discovery: GAE deploy provider dont work well with java applications as it needs to use app.yml
# and java apps deploys with appengine-web.xml. The workaround is working with scripts
#deploy:
#  provider: gae
#  keyfile: client-secret.json
#  project: k-social-crm
